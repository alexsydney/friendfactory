- if false
  .wave.current_user[@profile]{ :'data-profile_id' => @profile.id }
    .grid_2
      &nbsp;
    .grid_6
      .polaroid.edit
        - content_for :polaroid_front_face do
          .button-bar
            #{link_to 'Edit', edit_profile_path, :class => 'edit button'}
        = render :partial => 'wave/profiles/profile_front_face', :locals => { :profile => @profile }
    .grid_6
      .polaroid.edit
        - content_for :polaroid_back_face do
          .button-bar
            #{link_to 'Edit', edit_profile_path, :class => 'edit button'}
        .face-container
          .back.face
            .content.scrollable
              .items
                .pane.signals.mini-profile
                  %table.header<
                    %tr
                      %td.avatar= avatar_image_tag(@profile.avatar, :style => :thumb, :anonymous => true, :gender => @profile.gender)
                      %td.username= @profile.handle
                      %td.age= @profile.age.present? ? @profile.age : '&nbsp;'.html_safe
                  %table.detail
                    - current_site.biometric_domains.each do |biometric_domain|
                      = render :partial => 'domain', :object => biometric_domain
                    %tr
                      %td.label Birthday
                      %td.detail= @profile.dob.try(:strftime, '%e %B') || '&nbsp;'.html_safe
                    %tr
                      %td.label Location
                      %td.detail= @profile.location
            %table.button-bar
              %tr
                %td
                  = check_box_tag 'user[emailable]', 1, current_user.emailable?, :'data-remote' => true, :'data-method' => :put, :'data-url' => unsubscribe_profile_path
                  = label_tag :user_emailable, 'Subscribe to emails'
                %td
                  = link_to 'Edit', edit_profile_path, :class => 'edit button'
    .grid_2
      &nbsp;

  :javascript
    $('a.button.edit')
      .button({ icons: { primary: 'ui-icon-pencil' }, text: false });

#frame
  = form_for Posting::Avatar.new, :url => avatar_profile_path, :html => { :multipart => true } do |f|
    .headshot-container
      .headshot
        .front.face.dropzone
          %ul#upload_posting_avatar
            %li= headshot_image_tag(profile)
          = f.file_field :image
          = f.submit 'Upload', :id => 'avatar_upload_submit', :disable_with => 'Upload'
          %p.instructions
            Choose or drag avatar here

  .headshot-container
    .headshot
      .front.face
        %table.biometrics
          %tr
            %td.label First Name
            %td.detail= profile.handle
          %tr
            %td.label Age
            %td.detail= profile.age.present? ? profile.age : '&nbsp;'.html_safe
          %tr
            %td.label Birthday
            %td.detail= profile.dob.try(:strftime, '%e %B') || '&nbsp;'.html_safe
          %tr
            %td.label Location
            %td.detail= profile.location
          - current_site.biometric_domains.each do |biometric_domain|
            = render :partial => 'domain', :object => biometric_domain
        .button-bar
          = button_tag 'Edit'
          =# link_to 'Edit', edit_profile_path

  .headshot-container
    .headshot
      .front.face
        Preferences
        %table.button-bar
          %tr
            %td
              = check_box_tag 'user[emailable]', 1, current_user.emailable?, :'data-remote' => true, :'data-method' => :put, :'data-url' => unsubscribe_profile_path
              = label_tag :user_emailable, 'Subscribe to emails'
