.face-container
  .front.face
    = link_to 'Close', wave_profile_path(profile), :class => 'close'
    .content
      .pane.avatar
        = avatar_image_tag(profile.avatar, :class => 'headshot', :anonymous => true, :gender => profile.gender, :link_to_profile => false)
        %table.header
          %tr
            %td.username<
              = profile.handle
            %td.status
              -# Looking for fun
        %ul.buddy-bar.secondary
          %li= link_to 'Profile', wave_profile_path(profile), :class => 'icon profile'
        %ul.buddy-bar.primary
          -# %li= link_to 'Block', '#', :class => 'block icon'
          -# %li= link_to 'Pin', '#', :class => 'pin icon'
          %li= link_to 'Stats', 'profile', :class => 'flip mini-profile icon'
          %li= link_to 'Photos', 'photos', :class => 'flip photos icon'
          %li= link_to 'Invitations', '#invitations', :class => 'flip invitations icon'
          - if current_user.present? && (current_user.id != profile.user_id)
            %li= link_to 'Chat', conversation_wave_profile_path(profile), :class => 'flip chat icon last'
            %li= link_to 'Poke', poke_new_friendship_path(:profile_id => profile.id), :class => poke_link_class(profile.id), :remote => true, :'data-type' => :json, :method => :post
          - if false and current_user.id != profile.user_id
            %li= link_to 'Buddy', buddy_new_friendship_path(profile), :class => buddy_link_class(profile.id), :remote => true, :'data-type' => :json, :method => :put
        - if content_for?(:polaroid_front_face)
          = content_for(:polaroid_front_face)
