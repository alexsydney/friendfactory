- user   = album.user
- photos = album.photos.limit(2)
- photo  = photos.first
- if photo.present?
  .post_frame
    .post.photos[ proxy ]{ uid(album[:user_id]), :class => [ 'wave_album', (photos.length > 1) ? 'multiple' : nil ]}
      = link_to_unpublish(proxy)
      .portrait= thimble_link_to_profile(user, :remote => true)
      .clear
        .photo{ :class => photo.horizontal? ? nil : 'vertical' }
          =# link_to render_photo(photo), wave_community_path(album)
          = link_to_album_photo(album, photo)
        = posted_distance_of_time(proxy)
        = link_to_comments(proxy.comments.published.count, posting_comments_path(photo))
    .reaction
